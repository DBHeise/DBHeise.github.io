<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>powershell on </title>
    <link>https://dbheise.github.io/tags/powershell/</link>
    <description>Recent content in powershell on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Jun 2020 17:13:06 -0400</lastBuildDate>
    
	<atom:link href="https://dbheise.github.io/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Script for New Golang Web Projects</title>
      <link>https://dbheise.github.io/posts/2020-06-10-script-for-new-golang-web-projects/</link>
      <pubDate>Wed, 10 Jun 2020 17:13:06 -0400</pubDate>
      
      <guid>https://dbheise.github.io/posts/2020-06-10-script-for-new-golang-web-projects/</guid>
      <description>Lately several people have been going over how they have their GO projects laid out, so I thought I&amp;rsquo;d join the group. I even went as far as created a powershell script to create the basic structure and initial files for a service/daemon based golang website.
It ends up with the root folder where you store your shared objects, logging, and config, and then subfolders for different aspects of your project.</description>
    </item>
    
    <item>
      <title>Powershell script to Convert MOV audio files to MP3 using VLC</title>
      <link>https://dbheise.github.io/posts/2009-12-01-powershell-script-to-convert-mov-audio-files-to-mp3-using-vlc/</link>
      <pubDate>Tue, 01 Dec 2009 13:44:00 -0500</pubDate>
      
      <guid>https://dbheise.github.io/posts/2009-12-01-powershell-script-to-convert-mov-audio-files-to-mp3-using-vlc/</guid>
      <description>So I&amp;rsquo;ve had a need lately to convert MOV audio files to MP3. At first I searched for self contained solutions online and everything looked and worked like carp-on-a-stick. So here&amp;rsquo;s what I came up with&amp;hellip;use VLC, then I put it in a powershell script.
Here&amp;rsquo;s the commandline for VLC to do the work:
vlc -I dummy &amp;lt;INPUTFILE&amp;gt; &amp;quot;:sout=#transcode{acodec=mp3,ab=128,channels=6}:standard{access=file,mux=asf,dst=&amp;lt;OUTPUTFILE&amp;gt;}&amp;quot; vlc://quitThen I just wrapped this around a &amp;ldquo;gci&amp;rdquo; on an input folder and viola!</description>
    </item>
    
  </channel>
</rss>